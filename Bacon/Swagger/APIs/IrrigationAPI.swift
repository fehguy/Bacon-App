//
// IrrigationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class IrrigationAPI {

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getIrrigationSummary(completion: @escaping ((_ data: IrrigationSummary?,_ error: Error?) -> Void)) {
        getIrrigationSummaryWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /irrigation
     - examples: [{contentType=application/json, example={
  "dailyRunTime" : {
    "duration" : 0.8008281904610115,
    "units" : "minutes"
  },
  "zones" : [ {
    "name" : "Front Yard Bushes",
    "zoneId" : 7,
    "id" : "front-bushes",
    "state" : true
  }, {
    "name" : "Front Yard Bushes",
    "zoneId" : 7,
    "id" : "front-bushes",
    "state" : true
  } ]
}}]

     - returns: RequestBuilder<IrrigationSummary> 
     */
    open class func getIrrigationSummaryWithRequestBuilder() -> RequestBuilder<IrrigationSummary> {
        let path = "/irrigation"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<IrrigationSummary>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter zoneId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getIrrigationZoneInfo(zoneId: String, completion: @escaping ((_ data: IrrigationZone?,_ error: Error?) -> Void)) {
        getIrrigationZoneInfoWithRequestBuilder(zoneId: zoneId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /irrigation/{zoneId}
     - examples: [{contentType=application/json, example={
  "name" : "Front Yard Bushes",
  "zoneId" : 7,
  "id" : "front-bushes",
  "state" : true
}}]
     
     - parameter zoneId: (path)  

     - returns: RequestBuilder<IrrigationZone> 
     */
    open class func getIrrigationZoneInfoWithRequestBuilder(zoneId: String) -> RequestBuilder<IrrigationZone> {
        var path = "/irrigation/{zoneId}"
        let zoneIdPreEscape = "\(zoneId)"
        let zoneIdPostEscape = zoneIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{zoneId}", with: zoneIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<IrrigationZone>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     * enum for parameter state
     */
    public enum State_setIrrigationZoneState: String { 
        case on = "on"
        case off = "off"
    }

    /**

     - parameter zoneId: (path)  
     - parameter state: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func setIrrigationZoneState(zoneId: String, state: State_setIrrigationZoneState, completion: @escaping ((_ data: ApiResponse?,_ error: Error?) -> Void)) {
        setIrrigationZoneStateWithRequestBuilder(zoneId: zoneId, state: state).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /irrigation/{zoneId}/{state}
     - examples: [{contentType=application/json, example={
  "code" : 0,
  "message" : "message"
}}]
     
     - parameter zoneId: (path)  
     - parameter state: (path)  

     - returns: RequestBuilder<ApiResponse> 
     */
    open class func setIrrigationZoneStateWithRequestBuilder(zoneId: String, state: State_setIrrigationZoneState) -> RequestBuilder<ApiResponse> {
        var path = "/irrigation/{zoneId}/{state}"
        let zoneIdPreEscape = "\(zoneId)"
        let zoneIdPostEscape = zoneIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{zoneId}", with: zoneIdPostEscape, options: .literal, range: nil)
        let statePreEscape = "\(state.rawValue)"
        let statePostEscape = statePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{state}", with: statePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ApiResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     * enum for parameter units
     */
    public enum Units_setIrrigationZoneStateForDuration: String { 
        case seconds = "seconds"
        case minutes = "minutes"
        case hours = "hours"
    }

    /**

     - parameter zoneId: (path)  
     - parameter duration: (path)  
     - parameter units: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func setIrrigationZoneStateForDuration(zoneId: String, duration: Int, units: Units_setIrrigationZoneStateForDuration? = nil, completion: @escaping ((_ data: ApiResponse?,_ error: Error?) -> Void)) {
        setIrrigationZoneStateForDurationWithRequestBuilder(zoneId: zoneId, duration: duration, units: units).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /irrigation/{zoneId}/timer/{duration}
     - examples: [{contentType=application/json, example={
  "code" : 0,
  "message" : "message"
}}]
     
     - parameter zoneId: (path)  
     - parameter duration: (path)  
     - parameter units: (query)  (optional)

     - returns: RequestBuilder<ApiResponse> 
     */
    open class func setIrrigationZoneStateForDurationWithRequestBuilder(zoneId: String, duration: Int, units: Units_setIrrigationZoneStateForDuration? = nil) -> RequestBuilder<ApiResponse> {
        var path = "/irrigation/{zoneId}/timer/{duration}"
        let zoneIdPreEscape = "\(zoneId)"
        let zoneIdPostEscape = zoneIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{zoneId}", with: zoneIdPostEscape, options: .literal, range: nil)
        let durationPreEscape = "\(duration)"
        let durationPostEscape = durationPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{duration}", with: durationPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values: [
            "units": units?.rawValue
        ])

        let requestBuilder: RequestBuilder<ApiResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
