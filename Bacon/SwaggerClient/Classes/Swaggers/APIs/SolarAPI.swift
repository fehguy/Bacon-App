//
// SolarAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class SolarAPI {
    /**
     * enum for parameter resolution
     */
    public enum Resolution_getSolarHistory: String { 
        case minutely = "minutely"
        case hourly = "hourly"
        case daily = "daily"
    }

    /**
     * enum for parameter format
     */
    public enum Format_getSolarHistory: String { 
        case csv = "csv"
        case json = "json"
    }

    /**

     - parameter resolution: (query)  (optional)
     - parameter format: (query)  (optional, default to json)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getSolarHistory(resolution: Resolution_getSolarHistory? = nil, format: Format_getSolarHistory? = nil, completion: @escaping ((_ data: SolarEnergyResponse?,_ error: Error?) -> Void)) {
        getSolarHistoryWithRequestBuilder(resolution: resolution, format: format).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /solar
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter resolution: (query)  (optional)
     - parameter format: (query)  (optional, default to json)

     - returns: RequestBuilder<SolarEnergyResponse> 
     */
    open class func getSolarHistoryWithRequestBuilder(resolution: Resolution_getSolarHistory? = nil, format: Format_getSolarHistory? = nil) -> RequestBuilder<SolarEnergyResponse> {
        let path = "/solar"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "resolution": resolution?.rawValue, 
            "format": format?.rawValue
        ])

        let requestBuilder: RequestBuilder<SolarEnergyResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
